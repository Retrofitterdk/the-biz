(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global.casex = factory());
}(this, (function () { 'use strict';

  // 

  const DEFAULT_DELIMITERS = 'A-Z\\s_-';

  function matches(str, delimiters) {
    const regex = new RegExp('([A-Z]?)([^' + (delimiters || DEFAULT_DELIMITERS) + ']*)', 'g');
    const strMatches = str.match(regex) || [];

    return strMatches.filter(function(value) {
      return value;
    });
  }

  function toCase(letter, str) {
    const isUpperCase = letter === letter.toUpperCase();
    return isUpperCase ? str.toUpperCase() : str.toLowerCase();
  }

  function applyPattern(str, pattern) {
    return toCase(pattern[0], str[0]) + toCase(pattern[1], str.substring(1));
  }

  function casex(str, pattern, delimiters) {
    const glue = pattern.substring(2, pattern.length - 2);
    const firstPattern = pattern.substring(0, 2);
    const secondPattern = pattern.substring(pattern.length - 2);

    return matches(str, delimiters)
      .map(function(match, index) {
        return applyPattern(match, index === 0 ? firstPattern : secondPattern);
      })
      .join(glue);
  }

  return casex;

})));
